{"version":3,"sources":["util/firebaseConfig.js","AppState/Store.js","AppState/actions.js","navbar.js","util/card.js","components/Home/home.js","util/error.js","components/CreateAccount/createaccount.js","components/Login/login.js","components/Deposit/deposit.js","components/Withdraw/withdraw.js","components/AllData/alldata.js","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Store","React","createContext","initialState","users","currentUser","success","showError","reducer","state","action","type","payload","error","StoreProvider","props","useReducer","dispatch","actions","getUserInfo","email","authentication","getAuth","Promise","resolve","reject","getIdToken","then","idToken","console","log","axios","get","headers","Authorization","userInfo","user","data","addUser","newUser","setShow","setShowSpinner","setShowErrorMessage","setErrorMessage","createUserWithEmailAndPassword","password","userCredential","name","response","catch","code","message","logIn","credentials","signInWithEmailAndPassword","withdraw","amount","deposit","setSuccess","value","setError","getAllUsers","updateUser","signOut","useActions","useEffect","onAuthStateChanged","firebaseUser","Provider","children","NavBar","useContext","location","useLocation","className","href","id","pathname","onClick","Card","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","Home","src","alt","width","Error","marginTop","role","CreateAccount","useState","show","showSpinner","showErrorMessage","errorMessage","formik","useFormik","initialValues","onSubmit","values","balance","onReset","validate","errors","test","length","Spinner","animation","handleSubmit","placeholder","onChange","handleChange","disabled","isValid","dirty","Alert","variant","handleReset","Login","JSON","stringify","htmlFor","Deposit","parseFloat","setTimeout","isNaN","Withdraw","AllData","scope","map","element","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a476196a.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"your info goes here\",\r\n  authDomain: \"your info goes here\",\r\n  projectId: \"your info goes here\",\r\n  storageBucket: \"your info goes here\",\r\n  messagingSenderId: \"your info goes here\",\r\n  appId: \"your info goes here\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport {app}","/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react'\nimport { getAuth } from 'firebase/auth'\nimport { useActions } from './actions'\n// eslint-disable-next-line no-unused-vars\nimport { app } from '../util/firebaseConfig'\n\nexport const Store = React.createContext()\n\nconst initialState = {\n  users: [],\n  currentUser: null,\n  success: false,\n  showError: false,\n}\n\n// eslint-disable-next-line consistent-return\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_USERS':\n      return { ...state, users: action.payload }\n    case 'LOGIN':\n      return { ...state, currentUser: action.payload }\n    case 'UPDATE_USERS':\n      return { ...state, users: action.payload }\n    case 'UPDATE_USER':\n      return { ...state, currentUser: action.payload }\n    case 'SET_SUCCESS':\n      return { ...state, success: action.payload }\n    case 'SET_ERROR':\n      return { ...state, error: action.payload }\n    default:\n      break\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  const actions = useActions(state, dispatch)\n  const value = { state, dispatch, actions }\n\n  useEffect(() => {\n    const auth = getAuth()\n    auth.onAuthStateChanged((firebaseUser) => {\n      if (!firebaseUser) {\n        actions.updateUser(null)\n        // eslint-disable-next-line no-console\n        console.log('User is not logged in')\n      } else {\n        actions.getUserInfo(firebaseUser.email)\n      }\n    })\n  }, [])\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n","/* eslint-disable no-console */\nimport axios from 'axios'\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth'\nimport { app } from '../util/firebaseConfig'\nexport const useActions = (state, dispatch) => {\n  const getAllUsers = () => {\n    // axios.get(\"/account/all\").then(response => {\n    //for development\n    axios\n      .get('http://localhost:3000/account/all')\n      .then((response) => {\n        dispatch({\n          type: 'SET_USERS',\n          payload: response.data,\n        })\n      })\n      .catch((error) => console.log(error))\n  }\n\n  //CREATES A NEW USER\n  const addUser = (newUser, {setShow, setShowSpinner, setShowErrorMessage, setErrorMessage}) => {\n    const authentication = getAuth()\n    createUserWithEmailAndPassword(\n      authentication,\n      newUser.email,\n      newUser.password,\n    ).then((userCredential) => {\n      userCredential.user.getIdToken().then((idToken) => {\n        //axios.get(`/account/create/${newUser.name}/${newUser.email}/${newUser.password}`).then(response=>{\n        //for development\n        axios\n          .get(\n            `http://localhost:3000/account/create/${newUser.name}/${newUser.email}/${newUser.password}`,\n            {\n              headers: {\n                Authorization: idToken, //the token is a variable which holds the token\n              },\n            },\n          )\n          .then((response) => {\n            dispatch({\n              type: 'UPDATE_USER',\n              payload: newUser,\n            })\n            setShow(false);\n            setShowSpinner(false);\n          })\n          .catch((error) => {\n            setErrorMessage(`${error.code} ${error.message}`)\n            setShowErrorMessage(true)\n            setShowSpinner(false)\n          })\n      })\n    })\n    .catch((error) => {\n      setErrorMessage(`${error.code} ${error.message}`)\n      setShowErrorMessage(true)\n      setShowSpinner(false)\n    })\n  }\n\n  const signOut = () => {\n    const authentication = getAuth()\n    authentication.signOut()\n  }\n\n  const getUserInfo = (email) => {\n    const authentication = getAuth()\n    if (authentication.currentUser) {\n      authentication.currentUser.getIdToken().then((idToken) => {\n        console.log('idToken:', idToken)\n        return axios\n          .get(`http://localhost:3000/account/info/${email}`, {\n            headers: {\n              Authorization: idToken, //the token is a variable which holds the token\n            },\n          })\n          .then((userInfo) => {\n            const user = userInfo.data\n            dispatch({\n            type: 'UPDATE_USER',\n              payload: user,\n            })\n          })\n      })\n    } else {\n      return new Promise((resolve, reject) => {\n        reject('No user logged in.')\n      })\n    }\n  }\n\n  //TRIES TO LOGIN WITH THE PROVIDED CREDENTIALS\n  const logIn = (\n    credentials,\n    { setShowSpinner, setShowErrorMessage, setErrorMessage },\n  ) => {\n    const authentication = getAuth()\n    signInWithEmailAndPassword(\n      authentication,\n      credentials.email,\n      credentials.password,\n    )\n      .then((userCredential) => {\n        // Signed in\n        setShowSpinner(false)\n      })\n      .catch((error) => {\n        setErrorMessage(`${error.code} ${error.message}`)\n        setShowErrorMessage(true)\n        setShowSpinner(false)\n      })\n  }\n\n  const withdraw = (amount) => {\n    const authentication = getAuth()\n    // axios.get(`/account/withdraw/${state.currentUser.email}/${amount}`)\n    if (authentication.currentUser) {\n      authentication.currentUser.getIdToken().then((idToken) => {\n        console.log('idToken:', idToken)\n        axios\n          .get(\n            `http://localhost:3000/account/withdraw/${state.currentUser.email}/${amount}`,\n            {\n              headers: {\n                Authorization: idToken, //the token is a variable which holds the token\n              },\n            },\n          )\n          .then((response) => {\n            getUserInfo(state.currentUser.email)\n          })\n      })\n    } else {\n      console.error('user not logged in')\n    }\n  }\n\n  const deposit = (amount) => {\n    const authentication = getAuth()\n    // axios.get(`/account/deposit/${state.currentUser.email}/${amount}`)\n    if (authentication.currentUser) {\n      authentication.currentUser.getIdToken().then((idToken) => {\n        console.log('idToken:', idToken)\n        axios\n          .get(\n            `http://localhost:3000/account/deposit/${state.currentUser.email}/${amount}`,\n            {\n              headers: {\n                Authorization: idToken, //the token is a variable which holds the token\n              },\n            },\n          )\n          .then((response) => {\n            getUserInfo(state.currentUser.email)\n          })\n      })\n    } else {\n      console.error('user not logged in')\n    }\n  }\n\n  const setSuccess = (value) => {\n    dispatch({\n      type: 'SET_SUCCESS',\n      payload: value,\n    })\n  }\n\n  const setError = (value) => {\n    dispatch({\n      type: 'SET_ERROR',\n      payload: value,\n    })\n  }\n\n  const updateUser = (newUser) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: newUser,\n    })\n  }\n\n  return {\n    addUser,\n    logIn,\n    withdraw,\n    deposit,\n    setSuccess,\n    setError,\n    getAllUsers,\n    updateUser,\n    signOut,\n    getUserInfo,\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {useContext} from 'react';\r\nimport { Store } from './AppState/Store';\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function NavBar() { \r\n  const {state,actions} = useContext(Store);\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">BadBank</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className={location.pathname===\"/CreateAccount/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/CreateAccount/\">Create Account</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className={location.pathname===\"/login/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/login/\" aria-label=\"login-link\">{state.currentUser ? \"Profile\" : \"Login\"}</a>\r\n          </li>\r\n          {state.currentUser && <li className=\"nav-item\">\r\n            <a className={location.pathname===\"/deposit/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/deposit/\">Deposit</a>\r\n          </li>}\r\n          {state.currentUser && <li className=\"nav-item\">\r\n            <a className={location.pathname===\"/withdraw/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/withdraw/\">Withdraw</a>\r\n          </li>}\r\n          <li className=\"nav-item\">\r\n            <a className={location.pathname===\"/alldata/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/alldata/\">AllData</a>\r\n          </li>      \r\n          {state.currentUser &&\r\n            <li className=\"nav-item\">\r\n            <a className={location.pathname===\"/login/\" ? \"nav-link active\" : \"nav-link\"} onClick={actions.signOut} aria-label=\"login-link\">Logout</a>\r\n            </li>\r\n          }\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    </>\r\n  );\r\n}","export default function Card(props){\r\n  function classes(){\r\n    const bg  = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\r\n    const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\r\n    return 'card mb-3 ' + bg + txt;\r\n  }\r\n\r\n  return (\r\n    <div className={classes()} style={{maxWidth: \"18rem\"}}>\r\n      <div className=\"card-header\">{props.header}</div>\r\n      <div className=\"card-body\">\r\n        {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\r\n        {props.text && (<p className=\"card-text\">{props.text}</p>)}\r\n        {props.body}\r\n        {props.status && (<div id='createStatus'>{props.status}</div>)}\r\n      </div>\r\n    </div>      \r\n  );    \r\n}","import Card from '../../util/card';\r\nexport default function Home() {\r\n\r\n  return (\r\n    <Card\r\n    bgcolor=\"secondary\"\r\n    header=\"Welcome to the bank\"\r\n    body={\r\n      <>\r\n        <p>For all your banking needs</p>\r\n        <div>\r\n          <img src='./bankicon.png' alt=\"wat\" width=\"100%\"/>\r\n        </div>\r\n      </>\r\n    }\r\n    />\r\n  )\r\n}","export default function Error(props) { \r\n  return (\r\n    <div\r\n      style={{ marginTop: '10px' }}\r\n      className=\"alert alert-danger\"\r\n      role=\"alert\"\r\n    >\r\n  {props.message}\r\n</div>)\r\n}","import {useContext, useState} from 'react';\r\nimport Card from '../../util/card';\r\nimport {Store} from \"../../AppState/Store\";\r\nimport { useFormik } from 'formik';\r\nimport Error from '../../util/error';\r\nimport { Spinner, Alert } from 'react-bootstrap';\r\n\r\nexport default function CreateAccount() {\r\n  const [show, setShow] = useState(true);\r\n  const [showSpinner, setShowSpinner] = useState(false)\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const {actions} = useContext(Store)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name:'',\r\n      email: '',\r\n      password: ''\r\n    },\r\n    onSubmit: values => {\r\n     console.log(values);\r\n     setShowSpinner(true);\r\n     actions.addUser({...values, balance: 0}, {setShow, setShowSpinner, setShowErrorMessage, setErrorMessage});\r\n    },\r\n    onReset: values => {\r\n      setShow(true);\r\n    },\r\n    validate: values => {\r\n      let errors = {};\r\n      if(!values.name) errors.name = \"Field required\";\r\n      if(!values.email) errors.email = \"Field required\";\r\n      if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) errors.email = 'Invalid Email';\r\n      if(!values.password) errors.password = \"Field required\";\r\n      if(values.password.length < 8) errors.password = \"Password needs to be more than 8 characters\";\r\n      return errors;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <h3>CREATE ACCOUNT</h3>\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      // status={status}\r\n      body={show ? (  \r\n        <>\r\n        {showSpinner && (\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        )}\r\n        <form onSubmit={formik.handleSubmit}>\r\n          Name<br/>\r\n          <input type=\"input\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter name\" onChange={formik.handleChange} value={formik.values.name}/><br/>\r\n          {formik.errors.name ? <Error message={formik.errors.name}/> : null}\r\n          Email address<br/>\r\n          <input type=\"input\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={formik.handleChange} value={formik.values.email}/><br/>\r\n          {formik.errors.email ? <Error message={formik.errors.email}/> : null}\r\n          Password<br/>\r\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={formik.handleChange} value={formik.values.password}/><br/>\r\n          {formik.errors.password ? <Error message={formik.errors.password}/> : null}\r\n          <button type=\"submit\" className=\"btn btn-light\" id=\"submitBtn\" disabled={!(formik.isValid && formik.dirty)}>Create Account</button>\r\n        </form>\r\n        <br />\r\n        {showErrorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\r\n        </>\r\n      ):(\r\n        <>\r\n        <h5>Success</h5>\r\n        <button type=\"submit\" className=\"btn btn-light\" onClick={formik.handleReset}>Add another account</button>\r\n        </>\r\n      )}\r\n    />\r\n    </>\r\n  )\r\n}","import { Spinner, Alert } from 'react-bootstrap';\r\nimport { useContext, useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport Card from '../../util/card';\r\nimport { Store } from '../../AppState/Store';\r\nimport Error from '../../util/error';\r\n\r\nexport default function Login() {\r\n  // TODO: add a const called formik assigned to useFormik()\r\n  const { state, actions } = useContext(Store)\r\n  const [showSpinner, setShowSpinner] = useState(false)\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      setShowSpinner(true)\r\n      actions.logIn(values, {\r\n        setShowSpinner,\r\n        setShowErrorMessage,\r\n        setErrorMessage,\r\n      })\r\n    },\r\n    validate: (values) => {\r\n      let errors = {}\r\n      if (!values.email) errors.email = 'Field required'\r\n      else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))\r\n        errors.email = 'Username should be an email'\r\n      if (!values.password) errors.password = 'Field required'\r\n      return errors\r\n    },\r\n  })\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header={state.currentUser ? 'Profile' : 'Login'}\r\n      body={\r\n        !state.currentUser ? (\r\n          <div>\r\n            {showSpinner && (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </Spinner>\r\n            )}\r\n            <form onSubmit={formik.handleSubmit} data-testid=\"login-form\">\r\n              <div className=\"mb-3\">\r\n                <div>Email</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"emailField\"\r\n                  name=\"email\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.email}\r\n                  aria-label=\"email-field\"\r\n                />\r\n                {formik.errors.email ? (\r\n                  <Error id=\"emailError\" message={formik.errors.email} />\r\n                ) : null}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"pswField\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"pswField\"\r\n                  name=\"password\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.password}\r\n                  aria-label=\"password-field\"\r\n                />\r\n                {formik.errors.password ? (\r\n                  <Error id=\"emailError\" message={formik.errors.password} />\r\n                ) : null}\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-secondary\"\r\n                id=\"submitBtn\"\r\n                aria-label=\"login-button\"\r\n              >\r\n                Login\r\n              </button>\r\n            </form>\r\n            <br />\r\n            {showErrorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div id=\"login-message\">Login Succesful!</div>\r\n            <br /> Hello,{JSON.stringify(state.currentUser)}\r\n          </div>\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n","import {useContext} from 'react';\r\nimport {Store} from \"../../AppState/Store\";\r\nimport Card from '../../util/card';\r\nimport {useFormik} from \"formik\";\r\nimport Error from '../../util/error';\r\nexport default function Deposit() {\r\n  const {state, actions} = useContext(Store)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      amount: 0\r\n    },\r\n    onSubmit: values => {\r\n      let amount = parseFloat(values.amount);\r\n      actions.deposit(amount);\r\n      actions.setSuccess(true)\r\n      setTimeout(()=>{\r\n        actions.setSuccess(false);\r\n      },3000)\r\n    },\r\n    validate: values => {\r\n      let errors = {};\r\n      if(!values.amount || values.amount === \"\") errors.amount = \"Field required\";\r\n      if(values.amount !== \"\" && isNaN(parseFloat(values.amount))) errors.amount = \"Just Numbers allowed\";\r\n      if(values.amount < 0) errors.amount = \"Negative Numbers not allowed\";\r\n      return errors;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <h3>DEPOSIT</h3>\r\n    <Card\r\n      bgcolor=\"secondary\"\r\n      body= {\r\n        <>\r\n        {state.currentUser && <form onSubmit={formik.handleSubmit} data-testid=\"deposit-form\">\r\n          <div className=\"mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">Balance: </div>\r\n                <div className=\"col\" data-testid=\"user-balance\">{state.currentUser.balance}</div>\r\n            </div>\r\n            <div className=\"amount-container\">\r\n                <div className=\"row\">\r\n                  <h4>Deposit Amount</h4>\r\n                </div>\r\n                <div className=\"fields\">\r\n                  <input type=\"text\" className=\"form-control\" id=\"amountField\" name=\"amount\" onChange={formik.handleChange} value={formik.values.amount} aria-label=\"deposit-field\"/>\r\n                  {formik.errors.amount ? <Error id=\"emailError\" message={formik.errors.amount}/> : null}\r\n                  <button type=\"submit\" className=\"btn btn-primary\" id=\"submitBtn\" disabled={!(formik.isValid && formik.dirty)}>Deposit</button>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </form>}\r\n        {!state.currentUser && \r\n          <div>You can't see this content without being logged in.</div>\r\n        }\r\n        </>\r\n      }\r\n    />\r\n    {state.success && <div className=\"alert alert-success\" role=\"alert\">\r\n      Succes!\r\n    </div>}\r\n    </>\r\n    \r\n  )\r\n  \r\n}","import {useContext} from 'react';\r\nimport {Store} from \"../../AppState/Store\";\r\nimport Card from '../../util/card';\r\nimport {useFormik} from \"formik\";\r\nimport Error from \"../../util/error\";\r\n\r\nexport default function Withdraw() {\r\n  const {state, actions} = useContext(Store)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      amount: 0\r\n    },\r\n    onSubmit: values => {\r\n      console.log(values);\r\n      if(values.amount <= state.currentUser.balance) {\r\n        let amount = parseFloat(values.amount);\r\n        actions.withdraw(amount);\r\n        actions.setSuccess(true)\r\n        setTimeout(()=>{\r\n          actions.setSuccess(false);\r\n        },3000)\r\n      }\r\n      else { \r\n        actions.setError(true)\r\n        setTimeout(()=>{\r\n          actions.setError(false);\r\n        },3000)\r\n      }\r\n    },\r\n    validate: values => {\r\n      let errors = {};\r\n      if(!values.amount || values.amount === \"\") errors.amount = \"Field required\";\r\n      if(values.amount !== \"\" && isNaN(parseFloat(values.amount))) errors.amount = \"Just Numbers allowed\";\r\n      if(values.amount < 0) errors.amount = \"Negative Numbers not allowed\";\r\n      return errors;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <h3>WITHDRAW</h3>\r\n    <Card\r\n      bgcolor=\"secondary\"\r\n      body= {\r\n        <>\r\n        {state.currentUser && <form onSubmit={formik.handleSubmit} data-testid=\"withdraw-form\">\r\n          <div className=\"mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">Balance: </div>\r\n                <div className=\"col\" data-testid=\"user-balance\">{state.currentUser.balance}</div>\r\n            </div>\r\n            <div className=\"amount-container\">\r\n                <div className=\"row\">\r\n                  <h4>Withdraw Amount</h4>\r\n                </div>\r\n                <div className=\"fields\">\r\n                  <input type=\"text\" className=\"form-control\" id=\"amountField\" name=\"amount\" onChange={formik.handleChange} value={formik.values.amount} aria-label=\"withdraw-field\"/>\r\n                  {formik.errors.amount ? <Error id=\"emailError\" message={formik.errors.amount}/> : null}\r\n                  <button type=\"submit\" className=\"btn btn-primary\" id=\"submitBtn\" disabled={!(formik.isValid && formik.dirty)}>Withdraw</button>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </form>}\r\n        {!state.currentUser && \r\n          <div>You can't see this content without being logged in.</div>\r\n        }\r\n        </>\r\n      }\r\n    />\r\n    {state.success && <div className=\"alert alert-success\" role=\"alert\">\r\n      Succes!\r\n    </div>}\r\n    {state.error && <Error message=\"transaction failed\"/>}\r\n    </>\r\n    \r\n    \r\n  )\r\n}","import {useContext, useEffect} from 'react';\r\nimport {Store} from \"../../AppState/Store\";\r\nexport default function AllData() {\r\n  const { state, actions } = useContext(Store)\r\n  \r\n  useEffect(()=>{\r\n    actions.getAllUsers();\r\n  },[])\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Password</th>\r\n          <th scope=\"col\">Balance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {state.users.map(element=> {\r\n          return <tr key={element.email}>\r\n          <td>{element.email}</td>\r\n          <td>{element.name}</td>\r\n          <td>{element.password}</td>\r\n          <td>{element.balance}</td>\r\n        </tr>\r\n        })}\r\n      </tbody>\r\n  </table>\r\n  )\r\n}","import NavBar from './navbar';\r\nimport {Route, HashRouter} from 'react-router-dom';\r\nimport Home from './components/Home/home';\r\nimport CreateAccount from './components/CreateAccount/createaccount';\r\nimport Login from './components/Login/login';\r\nimport Deposit from './components/Deposit/deposit';\r\nimport Withdraw from './components/Withdraw/withdraw';\r\nimport AllData from './components/AllData/alldata';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n   <HashRouter>\r\n    <div className=\"container-fluid\">\r\n    <NavBar />\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/CreateAccount/\" component={CreateAccount} />\r\n      <Route path=\"/login/\" component={Login} />\r\n      <Route path=\"/deposit/\" component={Deposit}/>\r\n      <Route path=\"/withdraw/\" component={Withdraw} />\r\n      <Route path=\"/alldata/\" component={AllData} />\r\n    </div>\r\n   </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import UserContext from './util/context';\r\nimport {StoreProvider} from './AppState/Store';\r\n\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <App />\r\n  </StoreProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}